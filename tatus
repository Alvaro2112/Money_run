[1mdiff --git a/app/src/androidTest/java/sdp/moneyrun/GameTest.java b/app/src/androidTest/java/sdp/moneyrun/GameTest.java[m
[1mindex 3b48e12..89e81ee 100644[m
[1m--- a/app/src/androidTest/java/sdp/moneyrun/GameTest.java[m
[1m+++ b/app/src/androidTest/java/sdp/moneyrun/GameTest.java[m
[36m@@ -24,7 +24,19 @@[m [mimport static org.junit.Assert.*;[m
 @RunWith(AndroidJUnit4.class)[m
 public class GameTest {[m
     private DatabaseReference ref = FirebaseDatabase.getInstance().getReference();[m
[31m-[m
[32m+[m[32m    Game getTestGame() {[m
[32m+[m[32m        String name = "TestGame";[m
[32m+[m[32m        List<Player> players = new ArrayList<>();[m
[32m+[m[32m        players.add(new Player(1, "James", "Lausanne", 3, 4));[m
[32m+[m[32m        players.add(new Player(2, "Potter", "Nyon", 3, 4));[m
[32m+[m[32m        List<Riddle> riddles = new ArrayList<>();[m
[32m+[m[32m        riddles.add(new Riddle("?", "a", "b", "c", "d", "e"));[m
[32m+[m[32m        List<Coin> coins = new ArrayList<>();[m
[32m+[m[32m        coins.add(new Coin(1, 2));[m
[32m+[m[32m        int maxPlayers = 4;[m
[32m+[m[32m        Location targetLocation = new Location("");//provider name is unnecessary[m
[32m+[m[32m        return new Game(name, players, maxPlayers, riddles, targetLocation, coins);[m
[32m+[m[32m    }[m
 [m
     @Test[m
     public void basicRiddleTest() {[m
[36m@@ -153,7 +165,7 @@[m [mpublic class GameTest {[m
     @Test[m
     public void GameConstructorThrowsErrorOnNullArg(){[m
         try {[m
[31m-            Game g = new Game("name", new ArrayList<Player>(), 3, new ArrayList<Riddle>(), null);[m
[32m+[m[32m            Game g = new Game("name", new ArrayList<Player>(), 3, new ArrayList<Riddle>(), null, null);[m
         }catch(IllegalArgumentException e){[m
             assertTrue(true);[m
         }[m
[36m@@ -162,7 +174,8 @@[m [mpublic class GameTest {[m
 [m
     @Test[m
     public void GameIsAddedToDBOnCreation(){[m
[31m-        Game g = new Game("name", new ArrayList<Player>(), 3, new ArrayList<Riddle>(), new Location(""));[m
[32m+[m[32m        Game g = getTestGame();[m
[32m+[m[32m        g.addToDB();[m
         try {[m
             Thread.sleep(2000);[m
         } catch (InterruptedException e) {[m
[1mdiff --git a/app/src/main/java/sdp/moneyrun/Coin.java b/app/src/main/java/sdp/moneyrun/Coin.java[m
[1mindex 98e89e1..8e997a1 100644[m
[1m--- a/app/src/main/java/sdp/moneyrun/Coin.java[m
[1m+++ b/app/src/main/java/sdp/moneyrun/Coin.java[m
[36m@@ -17,6 +17,8 @@[m [mpublic class Coin {[m
 [m
     }[m
 [m
[32m+[m[32m    public coin[m
[32m+[m
 [m
     public double getLatitude(){return  latitude;}[m
     public double getLongitude(){return  longitude;}[m
[1mdiff --git a/app/src/main/java/sdp/moneyrun/Game.java b/app/src/main/java/sdp/moneyrun/Game.java[m
[1mindex ef79220..e2a0649 100644[m
[1m--- a/app/src/main/java/sdp/moneyrun/Game.java[m
[1m+++ b/app/src/main/java/sdp/moneyrun/Game.java[m
[36m@@ -45,11 +45,10 @@[m [mpublic class Game {[m
         if(name == null || players == null || riddles == null || startLocation == null || coins == null) {[m
             throw new IllegalArgumentException("Null parameter passed as argument in Game constructor");[m
         }[m
[31m-[m
         rootReference = FirebaseDatabase.getInstance().getReference();[m
         gameData = new GameData(name, players, maxPlayerNumber, riddles, startLocation, coins);[m
         this.hasBeenAdded = false;[m
[31m-        this.id = addToDB();[m
[32m+[m[32m        this.id = "";[m
     }[m
 [m
     private Game(GameData data) {[m
[36m@@ -60,15 +59,20 @@[m [mpublic class Game {[m
     }[m
 [m
     /**[m
[31m-     * Adds the GameData to the database[m
[32m+[m[32m     * Adds the GameData to the database if not already present[m
      * @return the Id of this game in the DB[m
      */[m
[31m-    private String addToDB(){[m
[31m-        DatabaseReference openGames = rootReference.child("open_games");[m
[31m-        id = openGames.push().getKey();[m
[31m-        openGames.child(id).setValue(gameData);[m
[31m-        //linkAttributesToDB();[m
[31m-        return id;[m
[32m+[m[32m    public String addToDB(){[m
[32m+[m[32m        if(!hasBeenAdded) {[m
[32m+[m[32m            DatabaseReference openGames = rootReference.child("open_games");[m
[32m+[m[32m            id = openGames.push().getKey();[m
[32m+[m[32m            openGames.child(id).setValue(gameData);[m
[32m+[m[32m            //TODO this thing below[m
[32m+[m[32m            //linkAttributesToDB();[m
[32m+[m
[32m+[m[32m            return id;[m
[32m+[m[32m        }[m
[32m+[m[32m        return getGameId();[m
     }[m
 [m
     /**[m
[36m@@ -173,7 +177,7 @@[m [mpublic class Game {[m
 [m
 [m
     /**[m
[31m-     * returns the game id[m
[32m+[m[32m     * returns the DataBase id for this Game, if it has been added, or the empty String O.W[m
      * @return the id of the game[m
      */[m
     public String getGameId(){[m
[1mdiff --git a/app/src/main/java/sdp/moneyrun/Riddle.java b/app/src/main/java/sdp/moneyrun/Riddle.java[m
[1mindex cc1a76d..59ff91e 100644[m
[1m--- a/app/src/main/java/sdp/moneyrun/Riddle.java[m
[1m+++ b/app/src/main/java/sdp/moneyrun/Riddle.java[m
[36m@@ -7,12 +7,13 @@[m [mimport java.util.Set;[m
 [m
 class Riddle {[m
 [m
[31m-    private final String question;[m
[31m-    private final String correctAnswer;[m
[31m-    private final String firstAnswer;[m
[31m-    private final String secondAnswer;[m
[31m-    private final String thirdAnswer;[m
[31m-    private final String fourthAnswer;[m
[32m+[m[32m    //They should be final, but that is incompatible with being able to add them to the DB[m
[32m+[m[32m    private String question;[m
[32m+[m[32m    private String correctAnswer;[m
[32m+[m[32m    private String firstAnswer;[m
[32m+[m[32m    private String secondAnswer;[m
[32m+[m[32m    private String thirdAnswer;[m
[32m+[m[32m    private String fourthAnswer;[m
 [m
 [m
 [m
[36m@@ -34,6 +35,11 @@[m [mclass Riddle {[m
         this.fourthAnswer = fourthAnswer;[m
     }[m
 [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Needed for the DataBase[m
[32m+[m[32m     */[m
[32m+[m[32m    public Riddle(){}[m
[32m+[m
     public String getQuestion() {[m
         return question;[m
     }[m
[36m@@ -46,6 +52,28 @@[m [mclass Riddle {[m
         return new String[]{firstAnswer, secondAnswer, thirdAnswer, fourthAnswer};[m
     }[m
 [m
[32m+[m[32m    //////Needed for The DataBase Code[m
[32m+[m[32m    public String getCorrectAnswer() {[m
[32m+[m[32m        return correctAnswer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getFirstAnswer() {[m
[32m+[m[32m        return firstAnswer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getSecondAnswer() {[m
[32m+[m[32m        return secondAnswer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getThirdAnswer() {[m
[32m+[m[32m        return thirdAnswer;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getFourthAnswer() {[m
[32m+[m[32m        return fourthAnswer;[m
[32m+[m[32m    }[m
[32m+[m[32m    //////////[m
[32m+[m
 [m
     @Override[m
     public boolean equals(Object o) {[m
